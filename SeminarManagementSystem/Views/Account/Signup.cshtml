@model ManagementSystem.Model.AccountModel

@{
    ViewBag.Title = "Signup";
}
<link href="~/Content/Login and Sign Up.css" rel="stylesheet" />
<h2>Signup</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AccountModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IsAvailable, new SelectList(ViewBag.Availability), "--Select Availablility--", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input onclick="myFunction()" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

        @if (ViewBag.DuplicateMessage != null)
        {
            <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.DuplicateMessage");
            };
            </script>

        }
    </div>
}

@Html.Raw(TempData["msg"])

<script>
    function myFunction() {
        if (document.getElementById("Username").value == "" ||
            document.getElementById("Password").value == "" ||
            document.getElementById("Email").value == "" ||
            document.getElementById("IsAvailable").value == "") {
            alert('Empty Element Found, Data Not Inserted')
            window.location.href = "Account/Signup";
        }
    }
</script>


<div>
    @Html.ActionLink("Click to Log in", "Login")
</div>
