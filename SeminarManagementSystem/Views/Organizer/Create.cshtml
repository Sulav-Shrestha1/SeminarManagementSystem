@model ManagementSystem.Model.OrganizerModel

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/Create.css" rel="stylesheet" />
<style>
    footer {
        top: 745px;
    }
</style>
<h2>Create Organizer</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Organizer Model</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.OrganizerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrganizerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrganizerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrganizerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrganizerEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrganizerEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrganizerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrganizerAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrganizerAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrganizerPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrganizerPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrganizerPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IsAvailable, new SelectList(ViewBag.Availability), "--Select Availablility--", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
            </div>
        </div>


        @if (ViewBag.DuplicateMessage != null)
        {
            <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.DuplicateMessage");
            };
            </script>

        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input onclick="myFunction()" type="submit" value="Create" class="btn" />
            </div>
        </div>
    </div>
}

<script>
    function myFunction() {
        if (document.getElementById("OrganizerName").value == "" ||
            document.getElementById("OrganizerAddress").value == "" ||
            document.getElementById("OrganizerPhone").value == "") {
            alert('Empty Element Found, Data Not Inserted')
        }
    }
</script>

@Html.Raw(TempData["msg"])

<div>
    @Html.ActionLink("Back to List", "GetAllOrganizer")
</div>
